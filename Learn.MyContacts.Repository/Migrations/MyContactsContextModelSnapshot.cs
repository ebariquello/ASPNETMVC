// <auto-generated />
using Learn.MyContacts.Models;
using Learn.MyContacts.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Learn.MyContacts.Repository.Migrations
{
    [DbContext(typeof(MyContactsContext))]
    partial class MyContactsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Learn.MyContacts.Models.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Company");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ContactID");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Learn.MyContacts.Models.ContactEmail", b =>
                {
                    b.Property<int>("ContactEmailID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContactID");

                    b.Property<string>("Email");

                    b.Property<int>("EmailType");

                    b.Property<bool>("IsPrincipal");

                    b.HasKey("ContactEmailID");

                    b.HasIndex("ContactID");

                    b.ToTable("ContactEmail");
                });

            modelBuilder.Entity("Learn.MyContacts.Models.ContactPhone", b =>
                {
                    b.Property<int>("ContactPhoneID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContactID");

                    b.Property<bool>("IsPrincipal");

                    b.Property<string>("Phone");

                    b.Property<int>("PhoneType");

                    b.HasKey("ContactPhoneID");

                    b.HasIndex("ContactID");

                    b.ToTable("ContactPhone");
                });

            modelBuilder.Entity("Learn.MyContacts.Models.ContactEmail", b =>
                {
                    b.HasOne("Learn.MyContacts.Models.Contact", "Contact")
                        .WithMany("ContactEmails")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Learn.MyContacts.Models.ContactPhone", b =>
                {
                    b.HasOne("Learn.MyContacts.Models.Contact", "Contact")
                        .WithMany("ContactPhones")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
